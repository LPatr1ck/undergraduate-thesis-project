{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\Desktop\\\\Book\\\\Client\\\\src\\\\Pages\\\\Components\\\\Reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmarkCircle } from '@fortawesome/free-regular-svg-icons';\nimport \"./Reserve.css\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRoom, setSelectedRoom] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/camere/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n  const mil_per_day = 1000 * 60 * 60 * 24;\n\n  function dayDiff(date1, date2) {\n    const timeDiff = Math.abs(date2.getTime() - date1.getTime());\n    const diffDays = Math.ceil(timeDiff / mil_per_day);\n    return diffDays;\n  }\n\n  const days = dayDiff(dates[0].startDate, dates[0].endDate);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  }; //console.log(getDatesInRange(dates[0].startDate, dates[0].endDate))\n\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = NumarCamera => {\n    const isFound = NumarCamera.unavailableDate.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRoom(checked ? [...selectedRoom, value] : selectedRoom.filter(item => item !== value));\n  }; //console.log(selectedRoom)\n\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {\n    try {\n      await Promise.all(selectedRoom.map(roomId => {\n        const res = axios.put(`/hotelrooms/availability/${roomId}`, {\n          dates: alldates\n        });\n        return res.data;\n      }));\n      setOpen(false);\n      navigate(\"/\");\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reserveContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faXmarkCircle,\n        className: \"reserveClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Selecteaza camerele dorite:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserveItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reserveItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserveTitle\",\n            children: item.titlu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserveDesc\",\n            children: item.descriere\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserveMax\",\n            children: [\"Numar maxim persoane: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPersoane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservePrice\",\n            children: [\"Pret standard camera: \", item.pret, \" RON\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reserveSelectRoom\",\n          children: item.numarcamere.map(NumarCamera => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"camera\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: NumarCamera.numar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: NumarCamera._id,\n              onChange: handleSelect,\n              disabled: !isAvailable(NumarCamera)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"reserveButton\",\n        children: \"Rezerva acum!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reserve, \"1Th6dHJx1BSC3fl+rvUkqn4YH6k=\", false, function () {\n  return [useFetch, useNavigate];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["C:/Users/leona/Desktop/Book/Client/src/Pages/Components/Reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faXmarkCircle","useFetch","useContext","useState","SearchContext","axios","useNavigate","Reserve","setOpen","hotelId","selectedRoom","setSelectedRoom","data","loading","error","dates","mil_per_day","dayDiff","date1","date2","timeDiff","Math","abs","getTime","diffDays","ceil","days","startDate","endDate","getDatesInRange","start","Date","end","date","push","setDate","getDate","alldates","isAvailable","NumarCamera","isFound","unavailableDate","some","includes","handleSelect","e","checked","target","value","filter","item","navigate","handleClick","Promise","all","map","roomId","res","put","err","titlu","descriere","maxPersoane","pret","numarcamere","numar","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faXmarkCircle } from '@fortawesome/free-regular-svg-icons';\r\nimport \"./Reserve.css\";\r\nimport useFetch from \"../../../hooks/useFetch\";\r\nimport { useContext, useState } from \"react\";\r\nimport { SearchContext } from \"../../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n\r\n    const [selectedRoom, setSelectedRoom] = useState([])\r\n\r\n    const { data, loading, error } = useFetch(`/hotels/camere/${hotelId}`)\r\n\r\n    const { dates } = useContext(SearchContext)\r\n\r\n    const mil_per_day = 1000 * 60 * 60 * 24\r\n    function dayDiff(date1, date2) {\r\n      const timeDiff = Math.abs(date2.getTime() - date1.getTime())\r\n      const diffDays = Math.ceil(timeDiff / mil_per_day)\r\n      return diffDays\r\n    }\r\n  \r\n    const days = dayDiff(dates[0].startDate, dates[0].endDate)\r\n\r\n    const getDatesInRange = (startDate, endDate) => {\r\n        const start = new Date(startDate)\r\n        const end = new Date(endDate)\r\n        const date = new Date(start.getTime())\r\n\r\n        let dates = []\r\n\r\n        while (date <= end) {\r\n            dates.push(new Date(date).getTime())\r\n            date.setDate(date.getDate() + 1)\r\n        }\r\n        return dates\r\n    }\r\n    //console.log(getDatesInRange(dates[0].startDate, dates[0].endDate))\r\n\r\n    const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate)\r\n\r\n    const isAvailable = (NumarCamera) => {\r\n        const isFound = NumarCamera.unavailableDate.some(date =>\r\n            alldates.includes(new Date(date).getTime())\r\n        )\r\n        return !isFound\r\n    }\r\n\r\n    const handleSelect = (e) => {\r\n        const checked = e.target.checked\r\n        const value = e.target.value\r\n        setSelectedRoom(checked ? [...selectedRoom, value] : selectedRoom.filter(item => item !== value))\r\n    }\r\n    //console.log(selectedRoom)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleClick = async () => {\r\n        try {\r\n            await Promise.all(\r\n                selectedRoom.map((roomId) => {\r\n                    const res = axios.put(`/hotelrooms/availability/${roomId}`, {\r\n                        dates: alldates,\r\n                    })\r\n                    return res.data\r\n                })\r\n            )\r\n            setOpen(false)\r\n            navigate(\"/\")\r\n        } catch (err) { }\r\n    }\r\n\r\n    return (\r\n        <div className=\"reserve\">\r\n            <div className=\"reserveContainer\">\r\n                <FontAwesomeIcon icon={faXmarkCircle} className=\"reserveClose\" onClick={() => setOpen(false)} />\r\n                <span>Selecteaza camerele dorite:</span>\r\n                {data.map(item => (\r\n                    <div className=\"reserveItem\">\r\n                        <div className=\"reserveItemInfo\">\r\n                            <div className=\"reserveTitle\">{item.titlu}</div>\r\n                            <div className=\"reserveDesc\">{item.descriere}</div>\r\n                            <div className=\"reserveMax\">Numar maxim persoane: <b>{item.maxPersoane}</b></div>\r\n                            <div className=\"reservePrice\">Pret standard camera: {item.pret} RON</div>\r\n                        </div>\r\n                        <div className=\"reserveSelectRoom\">\r\n                            {item.numarcamere.map(NumarCamera => (\r\n                                <div className=\"camera\">\r\n                                    <label>{NumarCamera.numar}</label>\r\n                                    <input type=\"checkbox\" value={NumarCamera._id} onChange={handleSelect} disabled={!isAvailable(NumarCamera)} />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                <button onClick={handleClick} className=\"reserveButton\">Rezerva acum!</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reserve"]},"metadata":{},"sourceType":"module"}