{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\Desktop\\\\Book\\\\Client\\\\src\\\\Pages\\\\Components\\\\Reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faXmarkCircle } from '@fortawesome/free-regular-svg-icons';\nimport \"./Reserve.css\";\nimport useFetch from \"../../../hook/useFetch\";\nimport { useContext, useState } from \"react\";\nimport { SearchContext } from \"../../../context/SearchContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRoom, setSelectedRoom] = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/camere/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    let list = [];\n\n    while (date <= end) {\n      list.push(new Date(date));\n      date.setDate(date.getDate() + 1);\n    }\n\n    return list;\n  };\n\n  console.log(getDatesInRange(dates[0].startDate, dates[0].endDate));\n\n  const handleSelect = e => {\n    const checked = e.target.checked;\n    const value = e.target.value;\n    setSelectedRoom(checked ? [...selectedRoom, value] : selectedRoom.filter(item => item !== value));\n  }; //console.log(selectedRoom)\n\n\n  const handleClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reserveContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faXmarkCircle,\n        className: \"reserveClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Selecteaza camerele dorite:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reserveItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reserveItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserveTitle\",\n            children: item.titlu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserveDesc\",\n            children: item.descriere\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reserveMax\",\n            children: [\"Numar maxim persoane: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPersoane\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservePrice\",\n            children: item.pret\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), item.numarcamere.map(NumarCamera => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: NumarCamera.numar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: NumarCamera._id,\n            onChange: handleSelect\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"reserveButton\",\n        children: \"Rezerva acum!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reserve, \"6GPwWHykJW5n01kAPUj0BEpZccI=\", false, function () {\n  return [useFetch];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["C:/Users/leona/Desktop/Book/Client/src/Pages/Components/Reserve/Reserve.jsx"],"names":["FontAwesomeIcon","faXmarkCircle","useFetch","useContext","useState","SearchContext","Reserve","setOpen","hotelId","selectedRoom","setSelectedRoom","data","loading","error","dates","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","list","push","setDate","getDate","console","log","handleSelect","e","checked","target","value","filter","item","handleClick","map","titlu","descriere","maxPersoane","pret","numarcamere","NumarCamera","numar","_id"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faXmarkCircle } from '@fortawesome/free-regular-svg-icons'\r\nimport \"./Reserve.css\"\r\nimport useFetch from \"../../../hook/useFetch\"\r\nimport { useContext, useState } from \"react\"\r\nimport { SearchContext } from \"../../../context/SearchContext\"\r\n\r\nconst Reserve = ({setOpen, hotelId}) => {\r\n\r\n    const [selectedRoom, setSelectedRoom] = useState([])\r\n\r\n    const { data, loading, error} = useFetch(`/hotels/camere/${hotelId}`)\r\n\r\n    const { dates } = useContext(SearchContext)\r\n\r\n    const getDatesInRange = (startDate,endDate)=>{\r\n        const start = new Date(startDate)\r\n        const end = new Date(endDate)\r\n        const date = new Date(start.getTime())\r\n\r\n        let list = []\r\n\r\n        while(date <= end){\r\n            list.push(new Date(date))\r\n            date.setDate(date.getDate()+1)\r\n        }\r\n        return list\r\n    }\r\n    console.log(getDatesInRange(dates[0].startDate, dates[0].endDate))\r\n\r\n    const handleSelect = (e) =>{\r\n        const checked = e.target.checked\r\n        const value = e.target.value\r\n        setSelectedRoom(checked ? [...selectedRoom, value] : selectedRoom.filter(item=>item !==value))\r\n    } \r\n    //console.log(selectedRoom)\r\n    const handleClick = ()=>{\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"reserve\">\r\n            <div className=\"reserveContainer\">\r\n                <FontAwesomeIcon icon={faXmarkCircle} className=\"reserveClose\" onClick={()=>setOpen(false)}/>\r\n                <span>Selecteaza camerele dorite:</span>\r\n                {data.map(item=>(\r\n                    <div className=\"reserveItem\">\r\n                        <div className=\"reserveItemInfo\">\r\n                            <div className=\"reserveTitle\">{item.titlu}</div>\r\n                            <div className=\"reserveDesc\">{item.descriere}</div>\r\n                            <div className=\"reserveMax\">Numar maxim persoane: <b>{item.maxPersoane}</b></div>\r\n                            <div className=\"reservePrice\">{item.pret}</div>\r\n                        </div>\r\n                            {item.numarcamere.map(NumarCamera=>(\r\n                            <div className=\"room\">\r\n                                <label>{NumarCamera.numar}</label>\r\n                                <input type=\"checkbox\" value={NumarCamera._id} onChange={handleSelect}/>\r\n                            </div>    \r\n                            ))}\r\n                        </div>\r\n                ))}\r\n                <button onClick={handleClick} className=\"reserveButton\">Rezerva acum!</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reserve"]},"metadata":{},"sourceType":"module"}